local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "üî• PIMSZ Script Hub | Universalüî•",
   LoadingTitle = "üî´ PIMSZ Universal Script üí•",
   LoadingSubtitle = "by pimsz",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "Example Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false,
})

local MainTab = Window:CreateTab("üè† Home", nil)
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "Script Executed",
   Content = "Universal GUI loaded successfully",
   Duration = 5,
   Image = 13047715178,
   Actions = {
      Ignore = {
         Name = "Okay!",
         Callback = function()
            print("User acknowledged notification.")
         end
      },
   },
})

-- Infinite Jump Toggle
local Button = MainTab:CreateButton({
   Name = "Toggle Infinite Jump",
   Callback = function()
       _G.infinjump = not _G.infinjump

       if not _G.infinJumpStarted then
           _G.infinJumpStarted = true
           game.StarterGui:SetCore("SendNotification", {Title="Universal Hub"; Text="Infinite Jump Activated!"; Duration=5;})

           local plr = game:GetService('Players').LocalPlayer
           local m = plr:GetMouse()
           m.KeyDown:Connect(function(k)
               if _G.infinjump and k:lower() == "space" then
                   local humanoid = plr.Character:FindFirstChildOfClass('Humanoid')
                   if humanoid then
                       humanoid:ChangeState('Jumping')
                   end
               end
           end)
       end
   end,
})

-- Fly Function
local flying = false
local Fly = function()
    local plr = game.Players.LocalPlayer
    local char = plr.Character or plr.CharacterAdded:Wait()
    local humanoidRoot = char:FindFirstChild("HumanoidRootPart")

    local BodyGyro = Instance.new("BodyGyro")
    BodyGyro.P = 3000
    BodyGyro.MaxTorque = Vector3.new(400000, 400000, 400000)
    BodyGyro.CFrame = humanoidRoot.CFrame
    BodyGyro.Parent = humanoidRoot

    local BodyVelocity = Instance.new("BodyVelocity")
    BodyVelocity.Velocity = Vector3.zero
    BodyVelocity.MaxForce = Vector3.new(400000, 400000, 400000)
    BodyVelocity.Parent = humanoidRoot

    flying = true
    local flySpeed = 50

    game:GetService("RunService").RenderStepped:Connect(function()
        if flying then
            BodyVelocity.Velocity = (workspace.CurrentCamera.CFrame.LookVector * flySpeed)
            BodyGyro.CFrame = workspace.CurrentCamera.CFrame
        else
            BodyGyro:Destroy()
            BodyVelocity:Destroy()
        end
    end)

    local mouse = plr:GetMouse()
    mouse.KeyDown:Connect(function(key)
        if key:lower() == "e" then
            flying = not flying
            if not flying then
                BodyGyro:Destroy()
                BodyVelocity:Destroy()
            end
        end
    end)
end

local FlyButton = MainTab:CreateButton({
   Name = "Toggle Fly (Press E)",
   Callback = Fly,
})

-- WalkSpeed Slider
local Slider = MainTab:CreateSlider({
   Name = "WalkSpeed Slider",
   Range = {16, 350},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderws",
   Callback = function(Value)
       local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
       if humanoid then
           humanoid.WalkSpeed = Value
       end
   end,
})

-- JumpPower Slider
local Slider = MainTab:CreateSlider({
   Name = "JumpPower Slider",
   Range = {50, 350},
   Increment = 1,
   Suffix = "Power",
   CurrentValue = 50,
   Flag = "sliderjp",
   Callback = function(Value)
       local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
       if humanoid then
           humanoid.JumpPower = Value
       end
   end,
})
